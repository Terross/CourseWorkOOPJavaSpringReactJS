{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dmitry/Documents/CourseWork/react-frontend/src/components/EmployeeComponents/EmployeesListComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from 'react-router-dom';\nimport AddEmployee from './AddEmployee';\nconst columns = [{\n  id: 'firstName',\n  label: 'First Name',\n  minWidth: 170\n}, {\n  id: 'secondName',\n  label: 'Second Name',\n  minWidth: 100\n}, {\n  id: 'salary',\n  label: 'Salary',\n  minWidth: 170\n}];\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8080/api/v1/employee\";\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function EmployeeListComponent() {\n  _s();\n\n  const classes = useStyles();\n  const [stateEmployee, setEmployeeState] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  let history = useHistory();\n  React.useEffect(() => {\n    getEmployee();\n  }, []);\n\n  const getEmployee = () => {\n    axios.get(EMPLOYEE_API_BASE_URL).then(data => {\n      setEmployeeState(data.data);\n    });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const addEmployee = () => {\n    history.push(\"/add-employee\");\n  };\n\n  const viewEmployee = () => {};\n\n  const editEmployee = () => {};\n\n  const deleteEmployee = () => {\n    let arrayids = [];\n    stateEmployee.forEach(d => {\n      if (d.select) {\n        arrayids.push(d.id);\n      }\n    });\n  };\n\n  const sendMes = () => {\n    console.log(\"ce\");\n  };\n\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = event => {\n    stateEmployee.forEach(e => {\n      e.setChecked(event.target.checked);\n    });\n    setChecked(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AddEmployee, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: \"10px\"\n      },\n      onClick: addEmployee,\n      children: \"Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: \"10px\"\n      },\n      children: \"Remove \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: \"10px\"\n      },\n      children: \"Edit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: \"10px\"\n      },\n      children: \"View \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"caption table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: stateEmployee.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(emp => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = emp[column.id];\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false);\n              })\n            }, emp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 25, 100],\n        component: \"div\",\n        count: stateEmployee.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmployeeListComponent, \"7dYNQO/GFAXmaeUf3Vvwm0QjsVI=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = EmployeeListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeListComponent\");","map":{"version":3,"sources":["/home/dmitry/Documents/CourseWork/react-frontend/src/components/EmployeeComponents/EmployeesListComponent.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","Button","Checkbox","useHistory","AddEmployee","columns","id","label","minWidth","EMPLOYEE_API_BASE_URL","useStyles","root","width","container","maxHeight","EmployeeListComponent","classes","stateEmployee","setEmployeeState","useState","page","setPage","rowsPerPage","setRowsPerPage","history","useEffect","getEmployee","get","then","data","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","addEmployee","push","viewEmployee","editEmployee","deleteEmployee","arrayids","forEach","d","select","sendMes","console","log","checked","setChecked","handleChange","e","margin","map","column","align","slice","emp","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from 'react-router-dom';\nimport AddEmployee from './AddEmployee';\n\nconst columns = [\n  { id: 'firstName', label: 'First Name', minWidth: 170 },\n  { id: 'secondName', label: 'Second Name', minWidth: 100 },\n  { id: 'salary', label: 'Salary',minWidth: 170},\n  \n  \n];\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8080/api/v1/employee\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function EmployeeListComponent() {\n  const classes = useStyles();\n  const [stateEmployee, setEmployeeState] = React.useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  let history = useHistory();\n  React.useEffect(() => {\n      getEmployee();\n  }, [])\n\n  const getEmployee=()=>{\n      axios.get(EMPLOYEE_API_BASE_URL).then(data=>{\n          setEmployeeState(data.data);\n      })\n  }\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const addEmployee = () => {\n    history.push(\"/add-employee\");\n  }\n  const viewEmployee = () => {\n\n  }\n\n  const editEmployee = () => {\n\n  }\n  const deleteEmployee = () => {\n      let arrayids = [];\n      stateEmployee.forEach(d => {\n          if(d.select) {\n              arrayids.push(d.id);\n          }\n      })\n  }\n  const sendMes=() => {\n      console.log(\"ce\");\n  }\n\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    stateEmployee.forEach(e=>{\n        e.setChecked(event.target.checked);\n    })\n    setChecked(event.target.checked);\n  };\n  \n  return (\n      \n    <Paper className={classes.root}>\n        <AddEmployee></AddEmployee>\n        \n        <Button variant=\"contained\"\n         color=\"primary\"\n         style={{margin:\"10px\"}}\n         onClick={addEmployee}>Add </Button>\n        <Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\"}}>Remove </Button>\n        <Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\"}}>Edit </Button>\n        <Button variant=\"contained\" color=\"primary\" style={{margin:\"10px\"}}>View </Button>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"caption table\">\n            \n          <TableHead>\n\n            <TableRow>\n                <TableCell>\n                    <span>Check</span>\n                </TableCell>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n\n          </TableHead>\n          <TableBody>\n                    \n            {stateEmployee.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((emp) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={emp.id}>\n                \n                  {columns.map((column) => {\n                    const value = emp[column.id];\n                   \n                    return (\n                    <>\n                      <TableCell key={column.id} align={column.align}>\n                        {value}\n                      </TableCell>\n                      \n                        \n                      </>\n                      \n                    );\n                  })}\n                \n                </TableRow>\n              );\n            })}\n\n          </TableBody>\n          \n        </Table>\n        \n        <TablePagination\n        rowsPerPageOptions={[5, 25, 100]}\n        component=\"div\"\n        count={stateEmployee.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    \n        </TableContainer>\n      \n      \n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}