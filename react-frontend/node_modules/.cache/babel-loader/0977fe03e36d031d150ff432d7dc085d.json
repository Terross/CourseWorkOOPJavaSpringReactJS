{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dmitry/Documents/CourseWork/react-frontend/src/components/OrderComponents/OrdersListComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport HeaderComponent from '../HeaderComponent';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Container } from '@material-ui/core';\nconst columns = [{\n  id: 'id',\n  label: 'Id',\n  minWidth: 170\n}, {\n  id: 'price'\n}];\nconst ORDERS_API_BASE_URL = \"http://localhost:8080/api/orders\";\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function OrdersListComponent() {\n  _s();\n\n  const classes = useStyles();\n  const [ordersState, setOrdersState] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  let history = useHistory();\n\n  const getOrders = () => {\n    axios.get(ORDERS_API_BASE_URL).then(data => {\n      console.log(data.data);\n    });\n  };\n\n  React.useEffect(() => {\n    getOrders();\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const deleteOrder = id => {\n    axios.delete(ORDERS_API_BASE_URL + '/' + id).then(data => {\n      getOrders();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fixed: false,\n    maxWidth: 2440,\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      title: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"caption table\",\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: ordersState.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                tabIndex: -1,\n                children: [columns.map(column => {\n                  const value = order[column.id];\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      children: value\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false);\n                }), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    className: classes.margin,\n                    size: \"small\",\n                    onClick: () => deleteOrder(order.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 17\n                }, this)]\n              }, order.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 25, 100],\n          component: \"div\",\n          count: ordersState.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrdersListComponent, \"8dWL4R/aEhwjU6pMfbnkawmK15A=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = OrdersListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersListComponent\");","map":{"version":3,"sources":["/home/dmitry/Documents/CourseWork/react-frontend/src/components/OrderComponents/OrdersListComponent.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","Grid","useHistory","HeaderComponent","IconButton","DeleteIcon","EditIcon","Container","columns","id","label","minWidth","ORDERS_API_BASE_URL","useStyles","root","width","container","maxHeight","OrdersListComponent","classes","ordersState","setOrdersState","useState","page","setPage","rowsPerPage","setRowsPerPage","history","getOrders","get","then","data","console","log","useEffect","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","deleteOrder","delete","map","column","align","slice","order","margin","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAoB,mBAApB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,QAAQ,EAAE;AAAnC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE;AAAN,CAFc,CAAhB;AAIA,MAAMG,mBAAmB,GAAG,kCAA5B;AAEA,MAAMC,SAAS,GAAGtB,UAAU,CAAC;AAC3BuB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AAJgB,CAAD,CAA5B;AASA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgC/B,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlC,KAAK,CAACgC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCpC,KAAK,CAACgC,QAAN,CAAe,CAAf,CAAtC;AACA,MAAIK,OAAO,GAAGzB,UAAU,EAAxB;;AAGA,QAAM0B,SAAS,GAAC,MAAI;AAChB5B,IAAAA,KAAK,CAAC6B,GAAN,CAAUjB,mBAAV,EAA+BkB,IAA/B,CAAoCC,IAAI,IAAE;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACK,KAFD;AAIH,GALD;;AAOAzC,EAAAA,KAAK,CAAC4C,SAAN,CAAgB,MAAM;AACpBN,IAAAA,SAAS;AACX,GAFA,EAEE,EAFF;;AAIA,QAAMO,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3Cb,IAAAA,OAAO,CAACa,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACzCV,IAAAA,cAAc,CAAC,CAACU,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAhB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMiB,WAAW,GAAGhC,EAAE,IAAI;AACvBT,IAAAA,KAAK,CAAC0C,MAAN,CAAa9B,mBAAmB,GAAE,GAArB,GAAyBH,EAAtC,EAA0CqB,IAA1C,CAA+CC,IAAI,IAAI;AACrDH,MAAAA,SAAS;AACV,KAFD;AAIF,GALD;;AAQA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE,KAAlB;AAAyB,IAAA,QAAQ,EAAE,IAAnC;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAET,OAAO,CAACL,IAA1B;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEK,OAAO,CAACH,SAAnC;AAAA,gCAEF,QAAC,KAAD;AAAO,UAAA,YAAY,MAAnB;AAAoB,wBAAW,eAA/B;AAAA,kCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAIE,QAAC,SAAD;AAAA,mCAEE,QAAC,QAAD;AAAA,yBAEGR,OAAO,CAACmC,GAAR,CAAaC,MAAD,iBACX,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEA,MAAM,CAACC,KAFhB;AAGE,gBAAA,KAAK,EAAE;AAAElC,kBAAAA,QAAQ,EAAEiC,MAAM,CAACjC;AAAnB,iBAHT;AAAA,0BAKGiC,MAAM,CAAClC;AALV,iBACOkC,MAAM,CAACnC,EADd;AAAA;AAAA;AAAA;AAAA,sBADD,CAFH,eAWE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAG,QAAnB;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAuBE,QAAC,SAAD;AAAA,sBAEGW,WAAW,CAAC0B,KAAZ,CAAkBvB,IAAI,GAAGE,WAAzB,EAAsCF,IAAI,GAAGE,WAAP,GAAqBA,WAA3D,EAAwEkB,GAAxE,CAA6EI,KAAD,IAAW;AAEtF,kCAEE,QAAC,QAAD;AAAU,gBAAA,KAAK,MAAf;AAAiB,gBAAA,QAAQ,EAAE,CAAC,CAA5B;AAAA,2BAEGvC,OAAO,CAACmC,GAAR,CAAaC,MAAD,IAAY;AACvB,wBAAMJ,KAAK,GAAGO,KAAK,CAACH,MAAM,CAACnC,EAAR,CAAnB;AAEA,sCACA;AAAA,2CACE,QAAC,SAAD;AAA2B,sBAAA,KAAK,EAAEmC,MAAM,CAACC,KAAzC;AAAA,gCACGL;AADH,uBAAgBI,MAAM,CAACnC,EAAvB;AAAA;AAAA;AAAA;AAAA;AADF,mCADA;AAOD,iBAVA,CAFH,eAaE,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,QAAjB;AAAA,yCAEM,QAAC,UAAD;AAAY,kCAAW,QAAvB;AACC,oBAAA,SAAS,EAAEU,OAAO,CAAC6B,MADpB;AAEE,oBAAA,IAAI,EAAC,OAFP;AAGE,oBAAA,OAAO,EAAE,MAAKP,WAAW,CAACM,KAAK,CAACtC,EAAP,CAH3B;AAAA,2CAKE,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA,iBAAoCsC,KAAK,CAACtC,EAA1C;AAAA;AAAA;AAAA;AAAA,sBAFF;AA2BD,aA7BA;AAFH;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eA8DF,QAAC,eAAD;AACA,UAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,CADpB;AAEA,UAAA,SAAS,EAAC,KAFV;AAGA,UAAA,KAAK,EAAEW,WAAW,CAAC6B,MAHnB;AAIA,UAAA,WAAW,EAAExB,WAJb;AAKA,UAAA,IAAI,EAAEF,IALN;AAMA,UAAA,YAAY,EAAEY,gBANd;AAOA,UAAA,mBAAmB,EAAEG;AAPrB;AAAA;AAAA;AAAA;AAAA,gBA9DE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;;GAtHuBpB,mB;UACNL,S,EAIFX,U;;;KALQgB,mB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport {Grid } from '@material-ui/core';\n\nimport { useHistory } from 'react-router-dom';\nimport HeaderComponent from '../HeaderComponent';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Container } from '@material-ui/core';\nconst columns = [\n  { id: 'id', label: 'Id', minWidth: 170 },\n  { id: 'price'}\n];\nconst ORDERS_API_BASE_URL = \"http://localhost:8080/api/orders\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function OrdersListComponent() {\n  const classes = useStyles();\n  const [ordersState, setOrdersState] = React.useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  let history = useHistory();\n  \n\n  const getOrders=()=>{\n      axios.get(ORDERS_API_BASE_URL).then(data=>{\n\t\tconsole.log(data.data);\n      });\n      \n  }\n\n  React.useEffect(() => {\n    getOrders();\n\t}, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  \n  const deleteOrder = id => {\n     axios.delete(ORDERS_API_BASE_URL +'/'+id).then(data => {\n       getOrders();\n     })\n     \n  }\n \n  \n  return (\n    <Container fixed={false} maxWidth={2440}>\n      <HeaderComponent title={\"Products\"}></HeaderComponent>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container} >\n      \n      <Table stickyHeader aria-label=\"caption table\">\n          <TableRow>\n            \n          </TableRow>\n        <TableHead>\n\n          <TableRow>\n    \n            {columns.map((column) => (\n              <TableCell\n                key={column.id}\n                align={column.align}\n                style={{ minWidth: column.minWidth }}\n              >\n                {column.label}\n              </TableCell>\n            ))}\n            <TableCell align = \"center\">\n              <span>Actions</span>\n            </TableCell>\n          </TableRow>\n\n        </TableHead>\n        <TableBody>\n                  \n          {ordersState.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((order) => {\n            \n            return (\n              \n              <TableRow hover  tabIndex={-1} key={order.id}>\n                \n                {columns.map((column) => {\n                  const value = order[column.id];\n                 \n                  return (\n                  <>\n                    <TableCell key={column.id} align={column.align}>\n                      {value}\n                    </TableCell>\n                    </> \n                  );\n                })}\n                <TableCell align=\"center\">\n                \n                      <IconButton aria-label=\"delete\"\n                       className={classes.margin}\n                        size=\"small\"\n                        onClick={() =>deleteOrder(order.id)}\n                        >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </TableCell>\n              </TableRow>\n            );\n          })}\n\n        </TableBody>\n        \n      </Table>\n      \n      <TablePagination\n      rowsPerPageOptions={[5, 25, 100]}\n      component=\"div\"\n      count={ordersState.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n  \n      </TableContainer>\n\n    </Paper>\n    </Container>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}